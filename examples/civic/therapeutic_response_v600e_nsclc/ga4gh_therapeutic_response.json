"response": {
  "statements": [
    {
      "id": "civic:EID3017"
      "type": "GksTherapeuticResponse",
      "molecular_profile": "civic:VID12",
      "therapeutic_intervention": "therapeutic_intervention:200", // an entity descriptor
      "disease": "civic:DiseaseID8", // an entity descriptor
      "variant_origin": "somatic",
      "clinical_significance": "predicts_sensitivity",
      "evidence_level": "A", /*
        previously we normalized this to the AMP/ASCO/CAP evidence classification
        levels. CIViC now differentiates between curated AMP classifications (CIViC Assertions)
        and the original CIViC Evidence model. For now, we should reinterpret CIViC
        evidence to AMP/ASCO/CAP as we did in MetaKB v1, and take verbatim the curated classifications
        from CIViC Assertions. We should also specify in our provenance where we reinterpret,
        and where we do not.

        A value set of "A", "B", "C", "D" seems reasonable, but we should also be able to
        relate that value set to the AMP/ASCO/CAP somatic classification standard.

        TODO: Discuss with Matt if VA statements are tied to specific classification standards.
        I think that they aren't, but they are linked to standard-specific SEPIO profiles.
      */
      "provenance": [
        /* this part of the model is not yet defined. SEPIO objects?
           at a minimum, we will want to know who submitted and approved,
           as well as the source publication(s) (pubmed:27283860). */
      ]
    }
  ],
  "gks_descriptors": [
    {
      "id": "therapeutic_intervention:200",
      "type": "GksTherapeuticIntervention",   // This doesn't exist yet
      "label": "Trametinib and Dabrafenib Combination Therapy",
      "components": [
        {
          "id": "ncit:C77908",
          "label": "Trametinib"
        },
        {
          "id": "ncit:C82386",
          "label": "Dabrafenib"
        }
      ],
      "drug_interaction_type": "combination" /*
          This could also be "sequential", "substitutes", or null
      */
    },
    {
      "id": "civic:DiseaseID1",
      "value_id":
    },
    {
      "id": "civic:MPID12", // this is a recasting of the VID to MPID. CIViC v2 will have MPs containing VIDs.
      "type": "GksMolecularProfile" // This doesn't exist yet, but a solution is needed
      "ruleset": {
        "rules": [
          {
            "predicate": "has_molecular_consequence",
            "object": "civic:VID12"
          },
        ],
        "operation": null     // This could also be "AND", "OR", or "NOT"
      },
    },
    {
      // Alternatively, could this be a VA MolecularConsequenceResult object?
      "id": "civic:VID12", // for upcoming CIViC v2, VIDs will go here.
      "type": "AlleleDescriptor",
      "label": "BRAF V600E",
      "value_id": "ga4gh:VA.fake_100",
      "expansion_set": "variation_set:101",
      "gene": "civic:GID5", // TODO: discuss if extension?
      "xref": [
        {"system": "ClinGenAlleleRegistry", "id": "CA123643"},
        {"system": "ClinVar", "id": "376069", "type":"variation"},
        {"system": "ClinVar", "id": "13961", "type":"variation"},
        {"system": "dbSNP", "id": "113488022", "type": "rs"},
      ],
      "alias": ["VAL600GLU"]
    },
    {
      "id": "variation_set:101",
      "type": "VariationSetDescriptor",
      "value": {
        "type": "VariationSet",
        "members": ["hgvs:301", "hgvs:302", "hgvs:303", "hgvs:304"]
      }
    },
    {
      "id": "hgvs:301",
      "type": "AlleleDescriptor",
      "label": "NM_004333.4:c.1799T>A",
      "value_id": "ga4gh:VA.fake_101"
    },
    {
      "id": "hgvs:302",
      "type": "AlleleDescriptor",
      "label": "NP_004324.2:p.Val600Glu",
      "value_id": "ga4gh:VA.fake_100"
    },
    {
      "id": "hgvs:303",
      "type": "AlleleDescriptor",
      "label": "NC_000007.13:g.140453136A>T",
      "value_id": "ga4gh:VA.fake_102"
    },
    {
      "id": "hgvs:304",
      "type": "AlleleDescriptor",
      "label": "ENST00000288602.6:c.1799T>A",
      "value_id": "ga4gh:VA.fake_103"
    },
    {
      "id": "civic:GID5",
      "type": "GeneDescriptor",
      "label": "BRAF", // from "entrez_name" field
      "description": "BRAF mutations are found to be recurrent in many cancer types. Of these, the mutation of valine 600 to glutamic acid (V600E) is the most prevalent. V600E has been determined to be an activating mutation, and cells that harbor it, along with other V600 mutations are sensitive to the BRAF inhibitor dabrafenib. It is also common to use MEK inhibition as a substitute for BRAF inhibitors, and the MEK inhibitor trametinib has seen some success in BRAF mutant melanomas. BRAF mutations have also been correlated with poor prognosis in many cancer types, although there is at least one study that questions this conclusion in papillary thyroid cancer.\n\nOncogenic BRAF mutations are divided into three categories that determine their sensitivity to inhibitors.\nClass 1 BRAF mutations (V600) are RAS-independent, signal as monomers and are sensitive to current RAF monomer inhibitors.\nClass 2 BRAF mutations (K601E, K601N, K601T, L597Q, L597V, G469A, G469V, G469R, G464V, G464E, and fusions) are RAS-independent, signaling as constitutive dimers and are resistant to vemurafenib. Such mutants may be sensitive to novel RAF dimer inhibitors or MEK inhibitors.\nClass 3 BRAF mutations (D287H, V459L, G466V, G466E, G466A, S467L, G469E, N581S, N581I, D594N, D594G, D594A, D594H, F595L, G596D, and G596R) with low or absent kinase activity are RAS-dependent and they activate ERK by increasing their binding to activated RAS and wild-type CRAF. Class 3 BRAF mutations coexist with mutations in RAS or NF1 in melanoma may be treated with MEK inhibitors. In epithelial tumors such as CRC or NSCLC may be effectively treated with combinations that include inhibitors of receptor tyrosine kinase.",
      "value_id": "hgnc:1097",
      "xref": [
        {"system":"ncbigene", "id": 673}
      ],
      "alias": [
        "BRAF", "B-raf", "RAFB1", "NS7", "BRAF1", "B-RAF1"
      ],
      "provenance": [
        /* this part of the model is not yet defined. SEPIO objects?
           at a minimum, we will want to know who submitted and approved,
           as well as the source publications (pubmed:19724843, pubmed:23594689, and pubmed:28783719) */
      ]
    }
  ],
  "value_objects": [
    ... TODO: fill in VRS variants here
  ]
}
